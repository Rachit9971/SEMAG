name: CD - Deploy to Azure

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "."
  NODE_VERSION: "20.x"

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "yarn"

      - name: "Install dependencies and build"
        run: |
          yarn install --frozen-lockfile
          yarn build

      - name: "Package application"
        run: |
          # Create package directory
          mkdir -p package

          # Copy necessary files
          cp -r dist/* package/
          cp package.json package/
          cp yarn.lock package/
          cp host.json package/
          cp local.settings.json package/ || true

          # Install production dependencies
          cd package
          yarn install --production --frozen-lockfile

      - name: "Upload artifact for deployment job"
        uses: actions/upload-artifact@v4
        with:
          name: function-app-package
          path: package/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: dev

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: "Download artifact from build job"
        uses: actions/download-artifact@v4
        with:
          name: function-app-package
          path: ./package

      - name: "Azure Login"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Deploy Infrastructure"
        run: |
          echo "ðŸš€ Deploying infrastructure..."

          # Set environment variables for parameter substitution
          export AZURE_ENV_NAME="dev-semag-$(date +%s | tail -c 6)"
          export AZURE_LOCATION="eastus"
          export FUNCTIONS_WORKER_RUNTIME="node"

          # Deploy infrastructure
          az deployment sub create \
            --location $AZURE_LOCATION \
            --template-file infra/main.bicep \
            --parameters @infra/main.parameters.json \
            --parameters environmentName=$AZURE_ENV_NAME location=$AZURE_LOCATION \
            --name "semag-infra-$(date +%s)"

          # Wait for deployment to complete
          DEPLOYMENT_NAME=$(az deployment sub list --query "[0].name" -o tsv)
          az deployment sub wait --name $DEPLOYMENT_NAME --created

          # Get deployment outputs
          FUNCTION_APP_NAME=$(az deployment sub show --name $DEPLOYMENT_NAME --query "properties.outputs.FUNCTION_APP_NAME.value" -o tsv)

          echo "FUNCTION_APP_NAME=$FUNCTION_APP_NAME" >> $GITHUB_ENV
          echo "âœ… Infrastructure deployed successfully"

      - name: "Deploy Azure Functions"
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_APP_NAME }}
          package: "./package"

      - name: "Deployment Summary"
        run: |
          echo "ðŸŽ‰ Deployment completed successfully!"
          echo "Function App: ${{ env.FUNCTION_APP_NAME }}"
          echo "Environment: dev"
          echo "Timestamp: $(date)"
